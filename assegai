#!/bin/bash

assegai_path=$(which assegai)
assegai_path=${assegai_path:0:-7}
working_dir="$(pwd)/"

# Template paths
config_template="assegai.template"
config_project_template="assegai.project.template"
log_dir="/tmp/assegai-"
controller_template="${assegai_path}templates/Controller.Template.php"
entity_template="${assegai_path}templates/Entity.Template.php"
module_template="${assegai_path}templates/Module.Template.php"
service_template="${assegai_path}templates/Service.Template.php"
repository_template="${assegai_path}templates/Repository.Template.php"

# Scripts path
src_dir="${assegai_path}src/"

version="1.0.0"
config="${working_dir}assegai.json"
output="_assegai.json"
is_numeric="^[0-9]+$"
is_string="^\"*[0-9a-zA-Z\s]+\"*$"

declare -a schematics=("controller" "entity" "feature" "module" "service")
declare -a database_commands=("migration" "setup" "schema:sync")

# Utility Functions
ArrayContains () {
    local seeking=$1; shift
    local in=1
    for element; do
        if [[ $element == "$seeking" ]]; then
            in=0
            break
        fi
    done
    return $in
}

Log () {
    dir="$log_dir$(tr -dc A-Za-z0-9 </dev/urandom | head -c 13 ; echo '')"
    echo "Logging to $dir"
}

LogAction () {
  case $1 in
    create)
    prefix="\e[1;32mCREATE\e[0m "
    ;;

    delete)
    prefix="\e[1;31mDELETE\e[0m "
    ;;

    info)
    prefix="\e[1;33mINFO\e[0m "
    ;;

    update)
    prefix="\e[1;34mUPDATE\e[0m "
    ;;

    *)
    echo -e "\e[1;31mInvalid log action: $1"
    return 1
    ;;
  esac

  echo -e "${prefix}${2}"
}

Error () {
    echo -e "\e[1;31m$1\e[0m"
    exit
}

CheckWorkspace () {
    if test ! -f "$config"; then
        Error "The $1 command requires to be run in an Assegai project, but a project definition could not be found."
    fi
}

GetBytes () {
    stat --printf="%s" $1
}

UpdateModule() {
  script="${assegai_path}src/update-module.php"
  php $script ${@}
}

UpdateRoutes() {
  script="${assegai_path}src/update-routes.php"
  php $script ${@}
}

# Command Functions
Config () {
  CheckWorkspace "config"

  if test $2; then
    if [[ $2 =~ $is_numeric ]] ; then
      cat $config | jq ".$1 = $2" > $output
    else
      cat $config | jq ".$1 = \"$2\"" > $output
    fi
    mv $output $config
  elif test $1; then
    property=$(cat $config | jq ".$1")
    if [[ $property =~ $is_string ]] ; then
      echo $property | sed -r 's/["]+//g'
    else
      echo $property | jq
    fi
  else
    cat $config | jq
  fi
}

Migration () {
  php "${src_dir}migration.php" ${@}
}

Init () {
  if test ! -f $config; then
    is_new=1
  else
    is_new=0
    # rm $config
  fi

  cp "${assegai_path}${config_template}" $config

  if test -f $config; then
    size=$(GetBytes $config)
    echo -e "\e[1;32mCreate\e[0m $config ($size bytes)\n"
  fi

  read -p $'\e[1;32m?\e[0m Project name: ' project_name
  read -p $'\e[1;32m?\e[0m Version [1.0.0]: ' project_version
  project_version=${project_version:-"1.0.0"}
  read -p $'\e[1;32m?\e[0m Description: ' project_description

  Config "name" $project_name
  Config "version" $project_version
  Config "description" $project_description

  if test $is_new -eq 1; then
    echo -e "\nInitialized empty Assegai workspace in $working_dir"
  else
    echo -e "\nReinitialized existing Assegai workspace in $working_dir"
  fi
  exit
}

case $1 in
  config)
    php "${src_dir}config.php" ${@}
  ;;

  database)
    php "${src_dir}database.php" ${@:2}
  ;;

  d)
    php "${src_dir}database.php" ${@:2}
  ;;

  generate)
    php "${src_dir}generate.php" ${@:2}
  ;;

  g)
    php "${src_dir}generate.php" ${@:2}
  ;;

  migration)
    php "${src_dir}migration.php" ${@:2}
  ;;

  init)
    php "${src_dir}init.php" ${@:2}
  ;;

  lint)
    php "${src_dir}lint.php" ${@:2}
  ;;

  n)
    php "${src_dir}new.php" ${@:2}
  ;;

  new)
    php "${src_dir}new.php" ${@:2}
  ;;

  test)
    php "${src_dir}test.php" ${@:2}
  ;;

  version)
    php "${src_dir}version.php" ${@:2}
  ;;

  v)
    php "${src_dir}version.php" ${@:2}
  ;;

  info)
    php "${src_dir}info.php" ${@:2}
  ;;

  *)
    php "${src_dir}help.php" ${@:2}
    # Help $2
  ;;
esac